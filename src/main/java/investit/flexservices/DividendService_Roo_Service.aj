// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package investit.flexservices;

import investit.domain.Dividend;
import java.lang.Long;
import java.util.List;

privileged aspect DividendService_Roo_Service {
    
    public Dividend DividendService.create(Dividend dividend) {
        dividend.persist();
        return dividend;
    }
    
    public Dividend DividendService.show(Long id) {
        if (id == null) throw new IllegalArgumentException("An Identifier is required");
        return Dividend.findDividend(id);
    }
    
    public List<Dividend> DividendService.list() {
        return Dividend.findAllDividends();
    }
    
    public List<Dividend> DividendService.listPaged(Integer page, Integer size) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            return Dividend.findDividendEntries(page == null ? 0 : (page.intValue() - 1) * sizeNo, sizeNo);
        } else {
            return list();
        }
    }
    
    public Dividend DividendService.update(Dividend dividend) {
        if (dividend == null) throw new IllegalArgumentException("A dividend is required");
        dividend=dividend.merge();
        return dividend;
    }
    
    public void DividendService.remove(Long id) {
        if (id == null) throw new IllegalArgumentException("An Identifier is required");
        Dividend.findDividend(id).remove();
    }
    
}
